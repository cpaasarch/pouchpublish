#!/bin/sh

# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
  set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

BASE=pouch
POUCHD=/usr/local/bin/pouchd
POUCHD_LOGFILE=/var/log/pouch.log
POUCHD_OPTS=""
POUCH_DESC="pouchd"

# get lsb functions
. /lib/lsb/init-functions

# check pouch is present
if [ ! -x $POUCHD ]; then
  log_failure_msg "$POUCHD not present or not executable"
  exit 1
fi

check_init() {
  # use upstart to manage pouchd
  if [ -x /sbin/initctl ] && /sbin/initctl version 2>/dev/null | grep -q upstart; then
    log_failure_msg "$POUCH_DESC is managed via upstart, try using service $BASE $1"
    exit 1
  fi
}

fail_unless_root() {
  if [ "$(id -u)" != '0' ]; then
    log_failure_msg "$POUCH_DESC must be run as root"
    exit 1
  fi
}

case "$1" in
  start)
    check_init

    fail_unless_root

    touch "$POUCHD_LOGFILE"
    chgrp pouch "$POUCHD_LOGFILE"

    ulimit -n 1048576

    # Having non-zero limits causes performance problems due to accounting overhead
    # in the kernel. We recommend using cgroups to do container-local accounting.
    if [ "$BASH" ]; then
      ulimit -u unlimited
    else
      ulimit -p unlimited
    fi

    log_begin_msg "Starting $POUCH_DESC: $BASE"
    start-stop-daemon --start --background \
      --no-close \
      --exec "$POUCHD" \
        $POUCHD_OPTS \
        >> "$POUCHD_LOGFILE" 2>&1
    log_end_msg $?
    ;;

  stop)
    check_init
    fail_unless_root
    log_begin_msg "Stopping $POUCH_DESC: $BASE"
    start-stop-daemon --stop --exec $POUCHD --retry 10
    log_end_msg $?
    ;;

  restart)
    check_init
    fail_unless_root
    service lxcfs stop
    $0 stop
    $0 start
    ;;

  force-reload)
    check_init
    fail_unless_root
    $0 restart
    ;;

  status)
    check_init
    status_of_proc "$POUCHD" "$POUCH_DESC"
    ;;

  *)
    echo "Usage: service pouch {start|stop|restart|status}"
    exit 1
    ;;
esac
